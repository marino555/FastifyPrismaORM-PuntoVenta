datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Users {
  id        Int          @id @default(autoincrement())
  nombre    String
  email     String       @unique
  pass      String
  role      String       @default("VENTOR")
  estado    Int          @default(1)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now()) @updatedAt
  Categoria Categorias[]
  Articulos Articulos[]
  Personas  Personas[]
  Ingresos  Ingresos[]
}

model Categorias {
  id           Int          @id @default(autoincrement())
  nombre       String
  descripcion  String?
  estado       Int          @default(1)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now()) @updatedAt
  user         Users        @relation(fields: [userId], references: [id])
  userId       Int
  subcategori  Categorias[] @relation("categoriasCool")
  Categorias   Categorias?  @relation("categoriasCool", fields: [categoriasId], references: [id])
  categoriasId Int?
  Articulos    Articulos[]
}

model Articulos {
  id            Int             @id @default(autoincrement())
  nombre        String
  descripcion   String?
  estado        Int             @default(1)
  codigo        String
  precio_venta  Int             @default(0)
  precio_compra Int             @default(0)
  stock         Int             @default(10)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now()) @updatedAt
  user          Users           @relation(fields: [userId], references: [id])
  userId        Int
  categoria     Categorias      @relation(fields: [catId], references: [id])
  catId         Int
  DetalleIngeso DetalleIngeso[]

}

model Personas {
  id             Int        @id @default(autoincrement())
  nombre         String
  email          String     @unique
  estado         Int        @default(1)
  tipo_persona   String     @default("CLIENTE")
  tipo_documento String     @default("CEDULA")
  num_documento  String?
  direccion      String?
  telefono       String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @default(now()) @updatedAt
  user           Users      @relation(fields: [userId], references: [id])
  userId         Int
  Ingresos       Ingresos[]

}

model Ingresos {
  id                Int      @id @default(autoincrement())
  tipo_comprobante  String?
  serie_comprobante String?
  num_comprobante   String?
  impuesto          Int?
  total             Int
  mes               Int?
  ano               Int?
  estado            Int      @default(1)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now()) @updatedAt

  user          Users           @relation(fields: [userId], references: [id])
  userId        Int
  persona       Personas        @relation(fields: [personaId], references: [id])
  personaId     Int
  DetalleIngeso DetalleIngeso[]
}

model DetalleIngeso {
  id        Int      @id @default(autoincrement())
  precio    Int?
  cantidad  Int
  estado    Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  articulo   Articulos @relation(fields: [articuloId], references: [id])
  articuloId Int
  Ingreso    Ingresos  @relation(fields: [ingresoId], references: [id])
  ingresoId  Int
}
